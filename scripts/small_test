# import json
# from shapely.geometry import Polygon, Point

# with open("point_coordinate_matches.json", "r") as f:
#     coordinates = json.load(f)

# all = len(coordinates)
# success = 0


# for key, value in coordinates.items():
#     centr = value["centroid"]
#     coords = value["coordinates"]
    
#     point = Point(centr)
#     polygon = Polygon(coords)
    
#     if polygon.contains(point):
#         success += 1
        
# print(f"Success: {success}")
# print(f"Fail: {all - success}")
# print(f"Success rate: {(success / all) * 100}%")

### THE ABOVE CODE SAVED ALL THE MATCHES IN A JSON FILE ###
###########################################################
###########################################################
###########################################################

# import json
# from shapely.geometry import Polygon, Point

# with open("point_coordinate_matches.json", "r") as f:
#     coordinates = json.load(f)

# with open("./data/centroids.json", "r") as f:
#     centroids = json.load(f)["centroids"]
#     print("Centroids loaded")
#     print(f"Centroids: {len(centroids)}")
    
# matched_centroids = []

# for key, value in coordinates.items():
#     centr = value["centroid"]
#     matched_centroids.append(centr)
    
# print(f"Matched centroids: {len(matched_centroids)}")
    
# new_centroids = {"centroids_left": []}

# for centroid in centroids:
#     if centroid not in matched_centroids:
#         new_centroids["centroids_left"].append(centroid)
        
    
# print(len(new_centroids["centroids_left"])) 


### THE ABOVE CODE CHECKS HOW MANY CENTROIDS ARE LEFT AFTER UNMATCHED ###
#######################################################################
#######################################################################
#######################################################################

# import json
# from functools import lru_cache

# with open("./data/centroids.json", "r") as f:
#     centroids = json.load(f)["centroids"]
#     print("Centroids loaded")
#     print(f"Centroids: {len(centroids)}")
    
# repeating_centroids = [{i: None} for i in range(1, 3398)]
# print(len(repeating_centroids))

# unique_centroids = []

# for centroid in centroids:
#     if centroid not in unique_centroids:
#         unique_centroids.append(centroid)
        
# print(len(unique_centroids))

# for num, centroid in enumerate(unique_centroids):
#     repeating_centroids[num][num+1] = {
#         "centroid": centroid,
#         "count": centroids.count(centroid)
#     }

# with open("unique_centroids.json", "w") as f:
#     json.dump(repeating_centroids, f, indent=4)

### THE ABOVE CODE SAVES ALL THE UNIQUE CENTROIDS AND HOW MANY TIMES THEY ARE REPEATED IN A JSON FILE###
####################################################################################################
####################################################################################################
####################################################################################################
####################################################################################################

# import json
# from functools import lru_cache

# with open("./data/coordinates.json", "r") as f:
#     coordinates = json.load(f)["coordinates"]
#     print("Coordinates loaded")
#     print(f"Coordinates: {len(coordinates)}")

# @lru_cache(maxsize=None)
# def repeating_coord(coord, repeated):
#     for coordinate in repeated:
#         if coord == coordinate:
#             return True
#     return False

# repeating_coordinates = []

# index = 0

# for coord in coordinates:
#     if not repeating_coord(coord, repeating_coordinates):
#         repeating_coordinates.append(coord)
#     if index % 1000 == 0:
#         print(f"Index: {index}")

# print(len(repeating_coordinates))


# import json

# with open("unique_centroids.json", "r") as f:
#     centroids = json.load(f)
    
# with open("point_coordinate_matches.json", "r") as f:
#     matches = json.load(f)
    
# print("DATA LOADED")
# print(len(centroids))
# print(len(matches))
# print("STARTING")

# only_centroids = []

# for item in centroids:
#     for key, value in item.items():
#         only_centroids.append(value["centroid"])

# unique_matched_centroids = []

# for key, value in matches.items():
#     if value["centroid"] not in unique_matched_centroids:
#         unique_matched_centroids.append(value["centroid"])
        
# matched_centroids_polygons = []

# for key, value in matches.items():
#     if value["centroid"] in unique_matched_centroids:
#         if value not in matched_centroids_polygons:
#             matched_centroids_polygons.append(value)

# for entry in centroids:
#     for key, value in entry.items():
#         #If the value for the centroid is in the matched_centroids_polygons list
#         #Then append the coordinates to the current dictionary of the centroid         
#         for match in matched_centroids_polygons:
#             if value["centroid"] == match["centroid"]:
#                 value["coordinates"] = match["coordinates"]
#                 break

# with open("centroids_with_polygons.json", "w") as f:
#     json.dump(centroids, f, indent=4)


### THE ABOVE CODE SAVES ALL THE CENTROIDS WITH THEIR COUNT AND POLYGONS IN A JSON FILE ###
########################################################################################
########################################################################################
########################################################################################


# import json
# from shapely.geometry import Polygon, Point

# with open("centroids_with_polygons.json", "r") as f:
#     centroids = json.load(f)
    
# all = len(centroids)
# success = 0
# has_coord = 0

# for item in centroids:
#     for key, value in item.items():
        
#         if "coordinates" not in value:
#             continue
        
#         has_coord += 1
#         centroid = value["centroid"]
#         coords = value["coordinates"]
        
#         point = Point(centroid)
#         polygon = Polygon(coords)
        
#         if polygon.contains(point):
#             success += 1
            

# print(f"Entries that have coordinates: {has_coord}")
# print(f"Success: {success}")
# print(f"All: {all}")


#### THE ABOVE CODE CONFIRMS ALL CENTROIDS THAT HAVE POLYGONS ARE WITHIN THE POLYGON ####
######################################################################################
######################################################################################
######################################################################################


# import json
# from shapely.geometry import Polygon, Point

# with open("centroids_with_polygons.json", "r") as f:
#     centroids_with_polygons = json.load(f)
    
# print("DATA LOADED")

# no_polygon = []

# for item in centroids_with_polygons:
#     for key, value in item.items():
#         if "coordinates" not in value:
#             no_polygon.append(value["centroid"])

# no_polygon_json = []

# for i in range(1, len(no_polygon)+1):
#     to_append = {
#         i: {
#             "centroid": no_polygon[i-1],
#         }
#     }
    
#     no_polygon_json.append(to_append)

# with open("./data/polygons.json", "r") as f:
#     coordinates = json.load(f)["coordinates"]

# actual_coords = []
        
# for coordinate in coordinates:
#     if isinstance(coordinate[0][0], list):
#         coordinate = list(list(coord) for coord in coordinate[0])
#     actual_coords.append(coordinate)
    
# coordinates = actual_coords

# for i, centroid in enumerate(no_polygon):
#     point = Point(centroid)
    
#     print(f"Index: {i+1} out of {len(no_polygon)}")
    
#     for coordinate in coordinates:
#         polygon = Polygon(coordinate)
        
#         if polygon.contains(point):
#             no_polygon_json[i][i+1]["coordinates"] = coordinate
#             break

# with open("centroids_without_polygons.json", "w") as f:
#     json.dump(no_polygon_json, f, indent=4)

#### THE ABOVE CODE FINDS THE POLYGONS FOR THE CENTROIDS THAT DON'T HAVE POLYGONS ####
##################################################################################
##################################################################################
##################################################################################

# import json
# from shapely.geometry import Polygon, Point

# with open("centroids_without_polygons.json", "r") as f:
#     centroids_without_polygons = json.load(f)
    
# all = len(centroids_without_polygons)

# has_coordinate = 0

# for item in centroids_without_polygons:
#     for key, value in item.items():
#         if "coordinates" in value:
#             has_coordinate += 1
#         else:
#             print(value)
            
# print(f"Has coordinate: {has_coordinate}")
# print(f"All: {all}")

# with open("./data/polygons.json", "r") as f:
    # coordinates = json.load(f)["coordinates"]
    
# actual_coords = []

# for coordinate in coordinates:
#     if isinstance(coordinate[0][0], list):
#         coordinate = list(list(coord) for coord in coordinate[0])
#     actual_coords.append(coordinate)

# point = [-123.09983012512932, 49.27294592860098]

# for coordinate in actual_coords:
#     polygon = Polygon(coordinate)
#     point = Point(point)
#     if polygon.contains(point):
#         print("YES")
#         break
# else:
#     print("NO POLYGON FOR THIS POINT")


### THE ABOVE CODE CONFIRMS ALL THE NEW CENTROIDS HAVE POLYGONS ###
### IT ALSO CONFIRMS THAT THERE IS ONLY ONE CENTROID WITH NO POLYGON ###
#####################################################################
#####################################################################
#####################################################################


# import json

# with open("centroids_with_polygons.json", "r") as f:
#     centroids_with_polygons = json.load(f)
    
# with open("centroids_without_polygons.json", "r") as f:
#     centroids_without_polygons = json.load(f)

# for item in centroids_without_polygons:
#     for key, value in item.items():
        
#         stop = False
        
#         if "coordinates" not in value:
#             continue
        
#         to_append = {
#             "coordinates": value["coordinates"],
#         }
        
#         for centroid in centroids_with_polygons:
#             for key2, value2 in centroid.items():
#                 if value["centroid"] == value2["centroid"]:
#                     value2.update(to_append)
#                     stop = True
#                     break
#             if stop:
#                 break

# has_coords = 0
# original_with_coords = 2604

# for item in centroids_with_polygons:
#     for key, value in item.items():
#         if "coordinates" in value:
#             has_coords += 1

# print(f"Original with coords: {original_with_coords}")
# print(f"New with coords: {has_coords}")

# with open("centroids_with_polygons.json", "w") as f:
#     json.dump(centroids_with_polygons, f, indent=4)

### THE ABOVE CODE ADDS THE POLYGONS TO THE CENTROIDS THAT HAD NO POLYGONS ###
###########################################################################
###########################################################################
###########################################################################


# import json
# from shapely.geometry import Polygon, Point

# with open("centroids_with_polygons.json", "r") as f:
#     centroids_with_polygons = json.load(f)
    
# full_success = 0
# target = 3396
    
# for item in centroids_with_polygons:
#     for key, value in item.items():
#         if "coordinates" not in value:
#             continue
        
#         point = Point(value["centroid"])
#         polygon = Polygon(value["coordinates"])
        
#         if point.within(polygon):
#             full_success += 0.5
            
#         if polygon.contains(point):
#             full_success += 0.5
            
# print(f"Success: {full_success}")
# print(f"Target: {target}")

# if full_success == target:
#     print("GG LET'S FUCKING GOOOOOO")


### THE ABOVE CODE CONFIRMS THAT ALL THE CENTROIDS HAVE POLYGONS AND ARE WITHIN THEM ###
####################################################################################
####################################################################################
####################################################################################
####################################################################################

# import json

# with open("centroids_with_polygons.json", "r") as f:
#     centroids_with_polygons = json.load(f)

# fixed_indices = [i for i in range(1, 3397)]
# fixed_indices = fixed_indices[::-1]

# fixed_data = []

# for entry in centroids_with_polygons:
#     for key, value in entry.items():
#         to_append = {
#             fixed_indices.pop(): value
#         }
#         fixed_data.append(to_append)

# with open("centroids_with_polygons.json", "w") as f:
#     json.dump(fixed_data, f, indent=4)

### THE ABOVE CODE JUST FIXED THE INDICES OF THE ENTRIES IN THE CENTROID POLYGON FILE ###
#########################################################################################
#########################################################################################
#########################################################################################